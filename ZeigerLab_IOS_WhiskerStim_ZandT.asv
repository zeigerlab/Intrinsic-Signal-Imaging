%% Script for whisker stimulus delivery during IOSI
% This script was generated by the Zeiger Lab at UCLA. It is used to
% deliver whisker stimuli via a piezoelectric bender to a mouse's whiskers.
% Sine wave stimuli at 100 hz are generated and output from a data
% acquisition device (National Instruments, BNC 2090a and PCIe-6363) to a
% voltage ampilifier (Micromechatronics, PD200-V100,100) to drive the
% bender (Bimitech Python PBA6014-5H200). A short voltage signal (TTL
% pulse) is also generated to synchronize camera acquistion with the start
% of each trial.

function [imData imInfo] = IOS_WhiskerStim_ZandT(experimentPath, logpath)
%% Start a timer so there is a consistent baseline period
tic
baseline= timer('TimerFcn',@(~,~)disp('Starting Stimulation'),'StartDelay',5);
start(baseline)
fprintf('Starting 5 second baseline \n')

%% Set up the Analog output 
dq=daq('ni');
addoutput(dq,'dev2','ao2','voltage'); %ao0 on Dev2/Port1 is named ao2 here
addoutput(dq,'dev2','ao3','voltage'); %ao1 on Dev2/Port1 is named ao3 here
dq.Rate=10000; %Set the sample rate
sr=dq.Rate;
Amp=4; %voltage output range of the daq is -10 to +10V; bimitech piezo range is -8 to +8
trigV=5; %voltage output for TTL pulse to trigger camera

%% Define stimulation parameters
%These work well for us, but can be adjusted as needed.
freq=100; %stimulus frequency
ISI=16; %interstimulus interval, in seconds
numtrials=30; %number of trials
T=1.5; %Length of stimulation in seconds
Ttotal=5; %Length of baseline + stimulation + post-stimulation
Tbase=1; %Length of baseline

%Create a voltage signal for the TTL pulse
trigT=0.001; %Length of TTL trigger
TTLbase=zeros(trigT*sr,1); %Short baseline before the TTL pulse
TTL=ones(trigT*sr,1)*trigV; %The TTL pulse
TTLend=zeros((Ttotal*sr)-size(TTLbase,1)-size(TTL,1),1); %Voltage back to zero for the remainder of the baseline period
tsig=[TTLbase;TTL;TTLend]; %Put the TTL sequence together

%Set up the baseline and post-stimulus voltage signal for the stimulus. The
%total length of the TTL signal and voltage signal must match because we
%are going to send them via the daq at the same time so everything is
%synchronized.
Stimbase=zeros((Tbase*sr)+trigT*sr,1); %
Stimend=zeros((Ttotal*sr)-size(Stimbase,1)-(T*sr),1);

%% Create a loop for stimulation
for ii=1:numtrials
    t = 0:1/sr:T-1/sr; %Define a time vector based on sampling rate
    x=(sin(2*pi*freq*t)*Amp)'; %Generate the sine wave & multiply by stimulus amplitude
    Stim=[Stimbase;x;Stimend]; %Put the stimulus sequence together
    
    if ii==1
        wait(baseline) %Wait for 5 second baseline to end before first stimulation
        toc
        fprintf('trial %d -- stimulation frequency %d hz \n',ii,freq)
        write(dq,[Stim,tsig]) %send the stimulus & TTL signals on ao2 and ao3, respectively
        delete(baseline)
    else
        fprintf('trial %d -- stimulation frequency %d hz \n',ii,freq)
        write(dq,[Stim,tsig]) %send the stimulus & TTL signals on ao2 and ao3, respectively
    end
    
    pause(ISI)
    
end
fprintf('5 second post-stimulation period \n')
pause(5) %Get 5 second post-stimulation baseline
toc
